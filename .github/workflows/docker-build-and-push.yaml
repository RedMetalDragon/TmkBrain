name: Build and Push Docker image

on:
  push:
    branches:
      - 'release/staging*'  # Trigger on pushes to branches matching release/staging*
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: true
      tag:
        description: 'Tag to build'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
    
    - name: Validate branch and Tag
      id: check-condition
      run: |
        echo "Ref: $GITHUB_REF"
        # Assuming GITHUB_REF could be a branch or a tag based on the event
        if [[ "$GITHUB_REF" =~ refs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
          echo "Valid semantic version tag"
          echo "{proceed}={true}" >> $GITHUB_OUTPUT
        else
          echo "Invalid or no semantic version tag"
          echo "{proceed}={false}" >> $GITHUB_OUTPUT
        fi

    - name: Set up QEMU
      if: steps.check-condition.outputs.proceed == 'true'
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      if: steps.check-condition.outputs.proceed == 'true'
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: steps.check-condition.outputs.proceed == 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push multi-arch image
      if: steps.check-condition.outputs.proceed == 'true'
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.prod
        platforms: linux/amd64,linux/arm64  # Specify the platforms
        push: true
        tags: |
          marcoguerod/tmkbrain-amd64:${{ github.event.inputs.tag || github.ref_name }}
          marcoguerod/tmkbrain-arm64:${{ github.event.inputs.tag || github.ref_name }}

    - name: Logout from Docker
      if: steps.check-condition.outputs.proceed == 'true'
      run: docker logout
